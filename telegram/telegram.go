package main

import (
	"log"
	"strconv"
	
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func main() {
	bot, err := tgbotapi.NewBotAPI("7549844817:AAEL_SfARov4mU2Gyhjdni3igNpwrHjRfEw")
	if err != nil {
		log.Panic(err)
	}

	bot.Debug = true
	log.Printf("Authorized on account %s", bot.Self.UserName)

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60

	updates := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message != nil {
			handleMessage(bot, update.Message)
		} else if update.CallbackQuery != nil {
			handleCallback(bot, update.CallbackQuery)
		}
	}
}

func handleMessage(bot *tgbotapi.BotAPI, message *tgbotapi.Message) {
	chatID := message.Chat.ID
	
	if message.Command() == "start" {
		showSubscriptionPlans(bot, chatID)
	}
}

func handleCallback(bot *tgbotapi.BotAPI, callback *tgbotapi.CallbackQuery) {
	chatID := callback.Message.Chat.ID
	data := callback.Data

	// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ callback
	bot.Request(tgbotapi.NewCallback(callback.ID, ""))

	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
	switch data {
	case "plan_1":
		showPaymentOptions(bot, chatID, "1 –º–µ—Å—è—Ü")
	case "plan_3":
		showPaymentOptions(bot, chatID, "3 –º–µ—Å—è—Ü–∞")
	case "plan_6":
		showPaymentOptions(bot, chatID, "6 –º–µ—Å—è—Ü–µ–≤")
	case "pay":
		showPaymentButtons(bot, chatID)
	case "paid":
		sendKey(bot, chatID)
	case "help":
		sendHelp(bot, chatID)
	case "back_to_plans":
		showSubscriptionPlans(bot, chatID)
	case "back_to_payment":
		showPaymentButtons(bot, chatID)
	}
}

func showSubscriptionPlans(bot *tgbotapi.BotAPI, chatID int64) {
	text := "–ö–∞–∫—É—é –ø–æ–¥–ø–∏—Å–∫—É —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?\n1 3 6 –º–µ—Å—è—Ü–µ–≤"
	
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("1 –º–µ—Å—è—Ü", "plan_1"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("3 –º–µ—Å—è—Ü–∞", "plan_3"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("6 –º–µ—Å—è—Ü–µ–≤", "plan_6"),
		),
	)

	msg := tgbotapi.NewMessage(chatID, text)
	msg.ReplyMarkup = keyboard
	bot.Send(msg)
}

func showPaymentOptions(bot *tgbotapi.BotAPI, chatID int64, planText string) {
	text := "–û–ø–ª–∞—Ç–∞\n–í—ã –≤—ã–±—Ä–∞–ª–∏: " + planText
	
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–û–ø–ª–∞—Ç–∏—Ç—å", "pay"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚Üê –ù–∞–∑–∞–¥ –∫ —Ç–∞—Ä–∏—Ñ–∞–º", "back_to_plans"),
		),
	)

	msg := tgbotapi.NewMessage(chatID, text)
	msg.ReplyMarkup = keyboard
	bot.Send(msg)
}

func showPaymentButtons(bot *tgbotapi.BotAPI, chatID int64) {
	text := "–û–ø–ª–∞—Ç–∞\n\n\n–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–∞—Ä—Ç—É:\nüí≥ 1234 5678 9012 3456\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:"
	
	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–Ø –æ–ø–ª–∞—Ç–∏–ª!", "paid"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ü–æ–º–æ—â—å!", "help"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚Üê –ù–∞–∑–∞–¥ –∫ —Ç–∞—Ä–∏—Ñ–∞–º", "back_to_plans"),
		),
	)

	msg := tgbotapi.NewMessage(chatID, text)
	msg.ReplyMarkup = keyboard
	bot.Send(msg)
}

func sendKey(bot *tgbotapi.BotAPI, chatID int64) {
	// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏ —Å—Ç–æ–π–∫–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä)
	key := "DEMO-KEY-" + strconv.FormatInt(chatID, 10)
	
	text := "–í—ã–¥–∞—Ç—å –∫–ª—é—á –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é!\n\n" +
		   "üîë –í–∞—à –∫–ª—é—á: `" + key + "`\n\n" +
		   "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n" +
		   "1. –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n" +
		   "2. –í–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–ª—é—á\n" +
		   "3. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ø–æ–¥–ø–∏—Å–∫–æ–π!\n\n" +
		   "–ö–ª—é—á —Å–∫–æ–ø–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –Ω–µ–≥–æ."

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ö—É–ø–∏—Ç—å –µ—â–µ", "back_to_plans"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("–ü–æ–º–æ—â—å", "help"),
		),
	)

	msg := tgbotapi.NewMessage(chatID, text)
	msg.ParseMode = "Markdown"
	msg.ReplyMarkup = keyboard
	bot.Send(msg)
}

func sendHelp(bot *tgbotapi.BotAPI, chatID int64) {
	text := "üÜò –ü–æ–º–æ—â—å –ø–æ –æ–ø–ª–∞—Ç–µ:\n\n" +
		   "‚ùì –ü—Ä–æ–±–ª–µ–º—ã —Å –æ–ø–ª–∞—Ç–æ–π?\n" +
		   "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏: @support_bot\n" +
		   "‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: 24/7\n\n" +
		   "üí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã:\n" +
		   "–ö–∞—Ä—Ç–∞: 1234 5678 9012 3456\n" +
		   "–ü–æ–ª—É—á–∞—Ç–µ–ª—å: –ò–≤–∞–Ω –ò.\n\n" +
		   "üìã –ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã:\n" +
		   "1. –ù–∞–∂–º–∏—Ç–µ '–Ø –æ–ø–ª–∞—Ç–∏–ª!'\n" +
		   "2. –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á\n" +
		   "3. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"

	keyboard := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚Üê –ù–∞–∑–∞–¥ –∫ –æ–ø–ª–∞—Ç–µ", "back_to_payment"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚Üê –ö —Ç–∞—Ä–∏—Ñ–∞–º", "back_to_plans"),
		),
	)

	msg := tgbotapi.NewMessage(chatID, text)
	msg.ReplyMarkup = keyboard
	bot.Send(msg)
}